# -*- coding: utf-8 -*-
"""Analíse de sentimentos filme a rede social

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MXfVqvRq8eUoF-IKGOn4Dz0vti85DX_F
"""

!pip install requests beautifulsoup4 textblob

import matplotlib.pyplot as plt
from wordcloud import WordCloud
from textblob import TextBlob


movie_title = "A Rede Social"
release_year = 2010
director = "David Fincher"
writer = "Aaron Sorkin"
budget = 40_000_000
box_office = 224_920_315
awards = {
    "Oscar": {"Ganhos": 3, "Indicações": 8},
    "Globo de Ouro": {"Ganhos": 4, "Indicações": 6},
    "BAFTA": {"Ganhos": 3, "Indicações": 6},
}
cast = ["Jesse Eisenberg", "Andrew Garfield", "Justin Timberlake", "Armie Hammer", "Rooney Mara"]


plot = """
Em 2003, Mark Zuckerberg, um estudante de Harvard, cria o site que se tornaria o Facebook.
O sucesso leva a conflitos legais e pessoais, destacando as complexidades da inovação tecnológica.
"""


weekly_box_office = [5, 12, 20, 35, 50, 60, 70, 75, 80, 85]


fincher_movies = {
    "A Rede Social": 224_920_315,
    "Clube da Luta": 101_200_000,
    "Seven": 327_300_000,
    "Garota Exemplar": 369_300_000,
}


def plot_budget_vs_box_office(budget, box_office):
    labels = ["Orçamento", "Arrecadação"]
    values = [budget, box_office]
    colors = ["blue", "green"]

    plt.figure(figsize=(8, 6))
    plt.bar(labels, values, color=colors)
    plt.title("Orçamento vs. Arrecadação")
    plt.ylabel("Valores em USD")
    plt.show()


def plot_awards_distribution(awards):
    categories = awards.keys()
    gains = [awards[cat]["Ganhos"] for cat in categories]
    nominations = [awards[cat]["Indicações"] for cat in categories]

    x = range(len(categories))

    plt.figure(figsize=(10, 6))
    plt.bar(x, gains, width=0.4, label="Prêmios Ganhos", color="gold", align="center")
    plt.bar([i + 0.4 for i in x], nominations, width=0.4, label="Indicações", color="silver", align="center")
    plt.xticks([i + 0.2 for i in x], categories)
    plt.title("Distribuição de Prêmios e Indicações")
    plt.legend()
    plt.show()


def plot_word_cloud(plot):
    wordcloud = WordCloud(width=800, height=400, background_color="white", colormap="viridis").generate(plot)

    plt.figure(figsize=(10, 6))
    plt.imshow(wordcloud, interpolation="bilinear")
    plt.axis("off")
    plt.title("Nuvem de Palavras - Enredo do Filme")
    plt.show()


def analyze_sentiment(plot):
    analysis = TextBlob(plot)
    polarity = analysis.sentiment.polarity
    sentiment = "positivo" if polarity > 0 else "negativo" if polarity < 0 else "neutro"
    print(f"Análise de Sentimento do Enredo: {sentiment.capitalize()} (Polaridade: {polarity:.2f})")

def plot_weekly_box_office(weekly_box_office):
    weeks = range(1, len(weekly_box_office) + 1)

    plt.figure(figsize=(8, 6))
    plt.plot(weeks, weekly_box_office, marker="o", color="purple")
    plt.title("Evolução da Bilheteria por Semana")
    plt.xlabel("Semanas")
    plt.ylabel("Arrecadação (em milhões)")
    plt.grid(True)
    plt.show()

def compare_fincher_movies(fincher_movies):
    movies = list(fincher_movies.keys())
    revenues = list(fincher_movies.values())

    plt.figure(figsize=(10, 6))
    plt.barh(movies, revenues, color="teal")
    plt.title("Comparação de Arrecadação - Filmes de David Fincher")
    plt.xlabel("Arrecadação em USD")
    plt.show()

def display_cast(cast):
    print("Elenco Principal:")
    for actor in cast:
        print(f"- {actor}")

print(f"Análise do Filme: {movie_title} ({release_year})")
print(f"Diretor: {director}")
print(f"Roteirista: {writer}\n")
display_cast(cast)

print("\nVisualização 1: Orçamento vs. Arrecadação")
plot_budget_vs_box_office(budget, box_office)

print("\nVisualização 2: Distribuição de Prêmios")
plot_awards_distribution(awards)

print("\nVisualização 3: Nuvem de Palavras do Enredo")
plot_word_cloud(plot)

print("\nVisualização 4: Análise de Sentimentos")
analyze_sentiment(plot)

print("\nVisualização 5: Evolução da Bilheteria por Semana")
plot_weekly_box_office(weekly_box_office)

print("\nVisualização 6: Comparação com Outros Filmes de David Fincher")
compare_fincher_movies(fincher_movies)